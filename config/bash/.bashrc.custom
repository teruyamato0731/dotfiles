# shellcheck disable=SC2148

# For PS1
# shellcheck disable=SC2034
GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWUPSTREAM=auto
# shellcheck disable=SC2154
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]$(__git_ps1 " \[\033[0;36m\](\[\033[1;31m\]%s\[\033[0;36m\])\[\033[00m\]") \$ '

# Aliases
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias ll='ls -alF'
alias cat='bat --paging=never'

# For fzf
# shellcheck disable=SC1091
[ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash ] && source "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash
export FZF_DEFAULT_COMMAND='fd --type f --hidden'
export FZF_CTRL_T_COMMAND='fd --hidden'
export FZF_ALT_C_COMMAND='fd --type d --hidden'
export FZF_DEFAULT_OPTS='--height 95% --layout reverse --border'
export FZF_CTRL_T_OPTS='--walker-skip .git,node_modules,build
    --preview "bat -n --color=always {} 2> /dev/null || tree -C {}"
    --preview-window "~3"
    --header "Press Ctrl-O to open editor"
    --color header:italic
    --bind "ctrl-o:become(code {})"'
export FZF_ALT_C_OPTS='--walker-skip .git,node_modules,build
    --preview "tree --gitignore -C {}"'

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden . "$1"
}

# shellcheck disable=SC1091
[ -f "$(ghq root)/github.com/junegunn/fzf-git.sh/fzf-git.sh" ] && source "$(ghq root)/github.com/junegunn/fzf-git.sh/fzf-git.sh"

gcd() {
    local dir
    dir="$(ghq list | fzf +m \
        --preview "cd $(ghq root) && bat --color=always --style=header,grid,numbers --line-range :200 {}/README* 2> /dev/null || tree -C {}" \
        --header 'Press Enter to cd, Ctrl-O to open in code' --color header:italic \
        --bind 'ctrl-o:become(code "$(ghq root)"/{})' \
        --prompt 'ghq> ')"
    if [ -n "${dir}" ]; then
        cd "$(ghq root)"/"${dir}" && pwd
    fi
}

gsw() {
    local branch
    branch="$(git branch --all | sed -e 's/.* //' -e 's/.*origin\///' | sort -u | \
        fzf +m \
            --preview 'git log -n 30 --color=always --oneline {}' \
            --header 'Press Enter to switch' --color header:italic \
            --footer='Ctrl-Q to create new branch: ' \
            --bind 'change:transform-footer:echo Ctrl-Q to create new branch: {q}' \
            --bind 'ctrl-q:become(git switch -c {q})' \
            --prompt 'branch> ')"
    if [ -n "${branch}" ]; then
        git switch "${branch}"
    fi
}

batdiff() {
    git diff --name-only --relative --diff-filter=d -z | xargs -0 bat --diff
}

bind -x '"\C-o": "gcd"'
bind -x '"\C-_": "gsw"'
